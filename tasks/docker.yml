---
- name: Install docker, install packages
  community.general.opkg:
    name: "{{ packages | join(',') }}"
    state: present
  vars:
    packages:
      - docker
      - dockerd
      - luci-app-dockerman
      - docker-compose
      - kmod-macvlan
  notify: Apply

- name: Install docker, adding macvlan interface
  notify: Apply
  uci:
    command: section
    config: network
    name: vlan20
    type: interface
    value:
      proto: static
      ipaddr: 192.168.20.1
      netmask: 255.255.255.0
      device: br-lan.20

- name: Install docker, adding macvlan device
  notify: Apply
  uci:
    command: section
    config: network
    type: device
    value:
      type: macvlan
      ifname: br-lan
      mode: bridge
      name: br-lan.20
      acceptlocal: 1
      ipv6: 0

- name: Install docker, adding macvlan route
  notify: Apply
  uci:
    command: section
    config: firewall
    type: zone
    find_by:
      name: lan
    value:
      network:
        - lan
        - vlan20

# - name: Install docker, reboot
#   ansible.builtin.meta: flush_handlers

- name: Install docker, check lan network
  ansible.builtin.command: |
    docker network inspect lan20
  register: _docker_lan_inspect_result
  changed_when: false
  failed_when: false

- name: Install docker, create lan20 network
  ansible.builtin.command: |
    docker network create \
      -d macvlan \
      --subnet 192.168.20.0/24 \
      --gateway 192.168.20.1 \
      --ip-range 192.168.20.253/32 \
      -o parent=br-lan.20 \
      lan20
  register: _docker_create_lan20_network_result
  when: _docker_lan_inspect_result.rc != 0
  changed_when: _docker_create_lan20_network_result.rc == 0

- name: Install docker, check unifi-controller container
  ansible.builtin.command: |
    docker ps \
      -a \
      --filter "name=unifi-controller" \
      --format "{{ '{{' }}.ID{{ '}}' }}"
  register: _docker_check_unifi_result
  changed_when: false
  failed_when: false

- name: Install docker, create unifi-controller container
  ansible.builtin.command: |
    docker run -d \
      --name=unifi-controller \
      -e PUID=1000 \
      -e PGID=1000 \
      -e TZ=Etc/UTC \
      -v /opt/dockerhome/ubiquiti/volume/config:/config \
      --restart unless-stopped \
      --network lan20 \
      --ip 192.168.20.10 \
      lscr.io/linuxserver/unifi-controller:7.3.83
  when: _docker_check_unifi_result.rc == 0 and _docker_check_unifi_result.stdout | length == 0
  register: _docker_create_unifi_container_result
  changed_when: _docker_create_unifi_container_result.rc == 0
