---
- name: Install image, set tempdir
  ansible.builtin.set_fact:
    imagebuilder_tempdir: /tmp/

- name: Install image, set imagebuilder download url
  ansible.builtin.set_fact:
    # https://downloads.openwrt.org/snapshots/targets/x86/64/openwrt-imagebuilder-x86-64.Linux-x86_64.tar.xz
    imagebuilder_url: >-
      https://downloads.openwrt.org/{{
      'releases/' + imagebuilder_version if imagebuilder_version else 'snapshots'
      }}/targets/{{imagebuilder_target }}/{{
      imagebuilder_subtarget }}/openwrt-imagebuilder{{
      '-' + imagebuilder_version if imagebuilder_version }}-{{
      imagebuilder_target }}-{{
      imagebuilder_subtarget }}.Linux-x86_64.tar.xz

- name: Install image, set imagebuilder archive filename
  ansible.builtin.set_fact:
    # openwrt-imagebuilder-x86-64.Linux-x86_64.tar.xz
    imagebuilder_archive: "{{ imagebuilder_url | basename }}"

- name: Install image, set imagebuilder uncompressed archive dirname
  ansible.builtin.set_fact:
    # openwrt-imagebuilder-x86-64.Linux-x86_64
    imagebuilder_dirname: "{{ imagebuilder_archive | splitext | first | splitext | first }}"

- name: Install image, set working dir
  ansible.builtin.set_fact:
    # /tmp/openwrt-imagebuilder-x86-64.Linux-x86_64
    imagebuilder_dir: "{{ imagebuilder_tempdir + imagebuilder_dirname }}"

- name: Install image, set image filename
  ansible.builtin.set_fact:
    # openwrt-22.03.3-x86-64-generic-ext4-combined-efi.img.gz
    imagebuilder_image: >-
      openwrt{{
      '-' + imagebuilder_version if imagebuilder_version }}-{{
      imagebuilder_target }}-{{
      imagebuilder_subtarget }}-{{ imagebuilder_profile }}-{{ imagebuilder_imagetype }}.img.gz

- name: Install image, download imagebuilder
  ansible.builtin.get_url:
    url: "{{ imagebuilder_url }}"
    dest: "{{ imagebuilder_tempdir + imagebuilder_archive }}"
    checksum: "{{ imagebuilder_checksum }}"
    mode: u=rw,g=r,o=r
  delegate_to: 127.0.0.1
  become: false

- name: Install image, unarchive imagebuilder
  ansible.builtin.unarchive:
    src: "{{ imagebuilder_tempdir + imagebuilder_archive }}"
    dest: "{{ imagebuilder_tempdir }}"
    creates: "{{ imagebuilder_dir }}"
    remote_src: true
  delegate_to: 127.0.0.1
  become: false

# - name: Install image, make clean
#   community.general.make:
#     chdir: "{{ imagebuilder_dir }}"
#     target: clean
#   delegate_to: 127.0.0.1
#   become: false

# - name: Install image, replace .config with original one
#   ansible.builtin.unarchive:
#     src: "{{ imagebuilder_tempdir + imagebuilder_archive }}"
#     dest: "{{ imagebuilder_tempdir }}"
#     include: "{{ imagebuilder_dirname }}/.config"
#     remote_src: true
#   delegate_to: 127.0.0.1
#   become: false

# - name: Install image, increase rootfs partition size to 512M
#   ansible.builtin.lineinfile:
#     path: "{{ imagebuilder_dir }}/.config"
#     regexp: '^CONFIG_TARGET_ROOTFS_PARTSIZE='
#     line: 'CONFIG_TARGET_ROOTFS_PARTSIZE=512'
#   delegate_to: 127.0.0.1
#   become: false

- name: Install image, copy custom uci-defaults script
  ansible.builtin.copy:
    src: "files/imagebuilder/etc/uci-defaults/99-custom"
    dest: "{{ imagebuilder_dir }}/files/etc/uci-defaults/"
    mode: u=rw,g=r,o=r
  delegate_to: 127.0.0.1
  become: false

- name: Install image, make image
  community.general.make:
    chdir: "{{ imagebuilder_dir }}"
    target: image
    params:
      PROFILE="generic"
      FILES="files"
  delegate_to: 127.0.0.1
  become: false

- name: Install image, copy image to router
  ansible.builtin.copy:
    src: "{{ imagebuilder_dir }}/bin/targets/{{ imagebuilder_target }}/{{ imagebuilder_subtarget }}/{{ imagebuilder_image }}"
    dest: /tmp/openwrt.img.gz
    mode: u=rw,g=r,o=r

- name: Install image, start sysupgrade process
  nohup:
    command: sysupgrade -n /tmp/openwrt.img.gz
  notify: Wait for connection

- name: Install image, trigger wait for connection
  ansible.builtin.meta: flush_handlers
