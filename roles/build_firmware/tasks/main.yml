---
- name: Set tempdir
  ansible.builtin.set_fact:
    firmware_tempdir: "{{ firmware_local_file | dirname }}/"

- name: Set OpenWRT download url
  ansible.builtin.set_fact:
    # https://downloads.openwrt.org/snapshots/targets/x86/64/
    # https://downloads.openwrt.org/releases/22.03.4/targets/x86/64/
    firmware_download_url: >-
      https://downloads.openwrt.org/{{
      'releases/' + firmware_version if firmware_version else 'snapshots'
      }}/targets/{{ firmware_target }}/{{
      firmware_subtarget }}/

- name: Set imagebuilder url
  ansible.builtin.set_fact:
    # https://downloads.openwrt.org/snapshots/targets/x86/64/openwrt-imagebuilder-x86-64.Linux-x86_64.tar.xz
    # https://downloads.openwrt.org/releases/22.03.4/targets/x86/64/openwrt-imagebuilder-22.03.4-x86-64.Linux-x86_64.tar.xz
    firmware_imagebuilder_url: >-
      {{ firmware_download_url }}openwrt-imagebuilder{{
      '-' + firmware_version if firmware_version }}-{{
      firmware_target }}-{{
      firmware_subtarget }}.Linux-x86_64.tar.xz

- name: Set imagebuilder archive filename
  ansible.builtin.set_fact:
    # openwrt-imagebuilder-22.03.4-x86-64.Linux-x86_64.tar.xz
    firmware_imagebuilder_archive: "{{ firmware_imagebuilder_url | basename }}"

- name: Set imagebuilder uncompressed archive dirname
  ansible.builtin.set_fact:
    # openwrt-imagebuilder-22.03.4-x86-64.Linux-x86_64
    firmware_dirname: "{{ firmware_imagebuilder_archive | splitext | first | splitext | first }}"

- name: Set working dir
  ansible.builtin.set_fact:
    # /tmp/openwrt-imagebuilder-22.03.4-x86-64.Linux-x86_64
    firmware_build_dir: "{{ firmware_tempdir + firmware_dirname }}"

- name: Download sha256sums file
  ansible.builtin.get_url:
    url: "{{ firmware_download_url }}sha256sums"
    dest: "{{ firmware_tempdir }}sha256sums"
    mode: u=rw,g=r,o=r
  delegate_to: localhost
  become: false

- name: Set imagebuilder archive sha256
  ansible.builtin.set_fact:
    firmware_imagebuilder_checksum: >-
      {{ 'sha256:' +
        (
          lookup('file', firmware_tempdir + 'sha256sums') |
          regex_search('([a-zA-Z0-9]+) \*' + firmware_imagebuilder_archive.replace('.', '\.'), '\1') |
          first
        )
      }}

- name: Download imagebuilder
  ansible.builtin.get_url:
    url: "{{ firmware_imagebuilder_url }}"
    dest: "{{ firmware_tempdir + firmware_imagebuilder_archive }}"
    checksum: "{{ firmware_imagebuilder_checksum }}"
    mode: u=rw,g=r,o=r
  delegate_to: localhost
  become: false

- name: Unarchive imagebuilder
  ansible.builtin.unarchive:
    src: "{{ firmware_tempdir + firmware_imagebuilder_archive }}"
    dest: "{{ firmware_tempdir }}"
    creates: "{{ firmware_build_dir }}"
    remote_src: true
  delegate_to: localhost
  become: false

- name: Make clean
  community.general.make:
    chdir: "{{ firmware_build_dir }}"
    target: clean
  delegate_to: localhost
  become: false

- name: Replace .config with original one
  ansible.builtin.unarchive:
    src: "{{ firmware_tempdir + firmware_imagebuilder_archive }}"
    dest: "{{ firmware_tempdir }}"
    include: "{{ firmware_dirname }}/.config"
    remote_src: true
  delegate_to: localhost
  become: false

- name: Increase rootfs partition size to 512M
  ansible.builtin.lineinfile:
    path: "{{ firmware_build_dir }}/.config"
    regexp: '^CONFIG_TARGET_ROOTFS_PARTSIZE='
    line: 'CONFIG_TARGET_ROOTFS_PARTSIZE=512'
  delegate_to: localhost
  become: false

- name: Copy custom files
  ansible.builtin.copy:
    src: "files/"
    dest: "{{ firmware_build_dir }}/files"
    mode: u=rw,g=r,o=r
  delegate_to: localhost
  become: false

- name: Make image
  community.general.make:
    chdir: "{{ firmware_build_dir }}"
    target: image
    params: >
      PROFILE="{{ firmware_profile }}"
      FILES="files"
      PACKAGES="{{
        ((firmware_packages_exclude | map('regex_replace', '^(.*)$', '-\1')) + firmware_packages_include)
        | join(' ') }}"
  delegate_to: localhost
  become: false

- name: Copy firmware to output path
  ansible.builtin.copy:
    src: >-
      {{ firmware_build_dir }}/bin/targets/{{
      firmware_target }}/{{
      firmware_subtarget }}/openwrt-{{
      firmware_version if firmware_version else 'snapshot' }}-{{
      firmware_target }}-{{
      firmware_subtarget }}-{{
      firmware_profile }}-{{
      firmware_image }}.img.gz
    dest: "{{ firmware_local_file }}"
    mode: u=rw,g=r,o=r
    force: true
  delegate_to: localhost
  become: false
