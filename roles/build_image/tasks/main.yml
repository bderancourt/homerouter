---
- name: Set tempdir
  ansible.builtin.set_fact:
    build_image_tempdir: /tmp/

- name: Set download url
  ansible.builtin.set_fact:
    # https://downloads.openwrt.org/snapshots/targets/x86/64/
    build_image_download_url: >-
      https://downloads.openwrt.org/{{
      'releases/' + build_image_version if build_image_version else 'snapshots'
      }}/targets/{{ build_image_target }}/{{
      build_image_subtarget }}/

- name: Set imagebuilder download url
  ansible.builtin.set_fact:
    # https://downloads.openwrt.org/snapshots/targets/x86/64/openwrt-imagebuilder-x86-64.Linux-x86_64.tar.xz
    build_image_url: >-
      {{ build_image_download_url }}/openwrt-imagebuilder{{
      '-' + build_image_version if build_image_version }}-{{
      build_image_target }}-{{
      build_image_subtarget }}.Linux-x86_64.tar.xz

- name: Set imagebuilder archive filename
  ansible.builtin.set_fact:
    # openwrt-imagebuilder-x86-64.Linux-x86_64.tar.xz
    build_image_archive: "{{ build_image_url | basename }}"

- name: Set imagebuilder uncompressed archive dirname
  ansible.builtin.set_fact:
    # openwrt-imagebuilder-x86-64.Linux-x86_64
    build_image_dirname: "{{ build_image_archive | splitext | first | splitext | first }}"

- name: Set working dir
  ansible.builtin.set_fact:
    # /tmp/openwrt-imagebuilder-x86-64.Linux-x86_64
    build_image_dir: "{{ build_image_tempdir + build_image_dirname }}"

- name: Download sha256sums file
  ansible.builtin.get_url:
    url: "{{ build_image_download_url }}sha256sums"
    dest: "{{ build_image_tempdir }}sha256sums"
    mode: u=rw,g=r,o=r
  delegate_to: localhost
  become: false

- name: Set imagebuilder archive sha256
  ansible.builtin.set_fact:
    build_image_imagebuilder_checksum: >-
      {{ 'sha256:' +
        (
          lookup('file', build_image_tempdir + 'sha256sums') |
          regex_search('([a-zA-Z0-9]+) \*' + build_image_archive.replace('.', '\.'), '\1') |
          first
        )
      }}

- name: Download imagebuilder
  ansible.builtin.get_url:
    url: "{{ build_image_url }}"
    dest: "{{ build_image_tempdir + build_image_archive }}"
    checksum: "{{ build_image_imagebuilder_checksum }}"
    mode: u=rw,g=r,o=r
  delegate_to: localhost
  become: false

- name: Unarchive imagebuilder
  ansible.builtin.unarchive:
    src: "{{ build_image_tempdir + build_image_archive }}"
    dest: "{{ build_image_tempdir }}"
    creates: "{{ build_image_dir }}"
    remote_src: true
  delegate_to: localhost
  become: false

- name: Make clean
  community.general.make:
    chdir: "{{ build_image_dir }}"
    target: clean
  delegate_to: localhost
  become: false

- name: Replace .config with original one
  ansible.builtin.unarchive:
    src: "{{ build_image_tempdir + build_image_archive }}"
    dest: "{{ build_image_tempdir }}"
    include: "{{ build_image_dirname }}/.config"
    remote_src: true
  delegate_to: localhost
  become: false

- name: Increase rootfs partition size to 512M
  ansible.builtin.lineinfile:
    path: "{{ build_image_dir }}/.config"
    regexp: '^CONFIG_TARGET_ROOTFS_PARTSIZE='
    line: 'CONFIG_TARGET_ROOTFS_PARTSIZE=512'
  delegate_to: localhost
  become: false

- name: Copy custom files
  ansible.builtin.copy:
    src: "files/"
    dest: "{{ build_image_dir }}/files"
    mode: u=rw,g=r,o=r
  delegate_to: localhost
  become: false

- name: Make image
  community.general.make:
    chdir: "{{ build_image_dir }}"
    target: image
    params: >
      PROFILE="{{ build_image_profile }}"
      FILES="files"
      PACKAGES="{{ (build_image_packages_exclude + build_image_packages_include) | join(' ') }}"
  delegate_to: localhost
  become: false
